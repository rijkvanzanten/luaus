<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<title>Minor WOT</title>
<style>
  @keyframes animatedBackground {
    0% {
      background-position: -400px 400px
    }

    100% {
      background-position: 0 0
    }
  }

  @font-face {
    font-family: 'pixel';
    src: url('pixel.woff2') format('woff2'),
         url('pixel.woff') format('woff');
    font-weight: normal;
    font-style: normal;
  }

  @keyframes wave {
    from {
      transform: translateY(0);
      color: blue;
    }
    to {
      transform: translateY(-35px);
    }
  }

  @keyframes pulsateRight {
    from {
      transform: scale(1) rotate(0);
    }

    to {
      transform: scale(1.2) rotate(10deg);
    }
  }

  @keyframes pulsateLeft {
    from {
      transform: scale(1) rotate(0);
    }

    to {
      transform: scale(1.2) rotate(-10deg);
    }
  }

  @keyframes flow {
    from {
      transform: scale(.7) rotate(-10deg);
    }

    to {
      transform: scale(1) rotate(10deg);
    }
  }

  * {
    font-size: inherit;
    font-family: inherit;
    cursor: inherit;
    user-select: none;
  }

  html {
    height: 100%;
    cursor: url(pointer.png) -15 0, auto;
  }

  body {
    font-family: 'pixel', cursive;
    background-image: url('/pow-star.png');
    animation: animatedBackground 1s linear infinite;
    margin: 0;
    display: flex;
    flex-direction: column;
    height: 100%;
  }

  #logo {
    padding-top: 250px;
    margin: 0 auto;
    position: relative;
    animation: flow 1.4s ease-in-out infinite alternate;
  }

  #logo h1 {
    letter-spacing: -16px;
    text-align: center;
    font-size: 76px;
  }

  #logo img {
    display: block;
    position: absolute;
    top: 50px;
    width: 160px;
    image-rendering: pixelated;
    z-index: -1;
  }

  #logo img:first-of-type {
    left: 0;
    animation: pulsateLeft 1.4s .3s infinite alternate;
  }

  #logo img:last-of-type {
    right: 0;
    animation: pulsateRight 1.4s infinite alternate;
  }

  #logo span {
    display: inline-block;
    animation-duration: 0.3s;
    animation-name: wave;
    animation-iteration-count: infinite;
    animation-direction: alternate;
  }

  #logo span:nth-child(1) {
    animation-delay: -0.7s;
    color: #780a8c;
  }

  #logo span:nth-child(2) {
    animation-delay: -0.6s;
    color: #8c0a7d;
  }

  #logo span:nth-child(3) {
    animation-delay: -0.5s;
    color: #a00a6e;
  }

  #logo span:nth-child(4) {
    animation-delay: -0.4s;
    color: #b40a96;
  }

  #logo span:nth-child(5) {
    animation-delay: -0.3s;
    color: #b40a96;
  }

  #setup {
    font-size: 3rem;
    text-align: center;
    padding: 2rem 0;
  }

  #min, #plus, input {
    display: inline-block;
    transition: .3s ease;
  }

  #min:hover,
  #plus:hover {
    transform: scale(1.2);
  }

  #min:active,
  #plus:active {
    transform: scale(0.9);
  }

  input {
    background-color: transparent;
    border: 0;
    width: 10rem;
    text-align: center;
    pointer-events: none;
  }

  button[type=submit] {
    display: block;
    margin: 2rem auto;
  }

  #players {
    /*background-color: blue;*/
    width: 100%;
    flex-grow: 1;
  }

  button {
    appearance: none;
    -webkit-appearance: none;
    background-color: transparent;
    border: none;
    margin: 0 4rem;
  }

  button:focus {
    outline: 0; /* just because */
  }

  button[type=submit] {
    transition: .3s ease;
  }

  button[type=submit]:hover {
    transform: scaleX(1.4);
  }

  button[type=submit]:active {
    transform: scaleX(0.8);
  }

</style>
<div id="logo">
  <img src="/berend32.png" />
  <h1>
    <span>l</span>
    <span>u</span>
    <span>a</span>
    <span>u</span>
    <span>s</span>
  </h1>
  <img src="/rijk32.png" />
</div>

<form id="setup">
  <button id="min" type="button">-</button>
  <input type="number" name="max-score" min="1" value="8" />
  <button id="plus" type="button">+</button>
  <button type="submit">start</button>
</form>

<div id="players">

</div>

<audio src="/8bit-love-machine.mp3" loop autoplay></audio>

<script>
  var ws = new WebSocket('ws://localhost:3000');

  ws.addEventListener('open', function(event) {
    console.log('Socket connected');
  });

  ws.addEventListener('message', function(event) {
    var data = JSON.parse(event.data);
    switch (data.action) {
      case 'SET_MAX_SCORE':
        document.querySelector('input').value = data.maxScore;
        break;
    }
  });

  document.querySelector('form').addEventListener('submit', function (e) {
    e.preventDefault();
    ws.send(JSON.stringify({device: 'scoreboard', action: 'START_GAME', maxScore: Number(document.querySelector('input').value)}));
  });

  document.querySelector('#min').addEventListener('click', function (e) {
    document.querySelector('input').value = Number(document.querySelector('input').value) - 1;
    ws.send(JSON.stringify({device: 'scoreboard', action: 'SET_MAX_SCORE', maxScore: Number(document.querySelector('input').value)}));
  });

  document.querySelector('#plus').addEventListener('click', function (e) {
    document.querySelector('input').value = Number(document.querySelector('input').value) + 1;
    ws.send(JSON.stringify({device: 'scoreboard', action: 'SET_MAX_SCORE', maxScore: Number(document.querySelector('input').value)}));
  });
</script>
